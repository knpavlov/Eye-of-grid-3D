        if (typeof window !== 'undefined' && typeof window.MY_SEAT === 'number') {
          if (gameState.active !== window.MY_SEAT) { showNotification('Opponent\'s turn', 'error'); return; }
        }
      } catch {}
      
      // Защита от преждевременного завершения хода во время анимаций
      if (typeof isInputLocked === 'function' ? isInputLocked() : (manaGainActive || drawAnimationActive || splashActive)) {
        showNotification('Wait for animations to complete', 'warning');
        return;
      }
      
      __endTurnInProgress = true;
      // Сброс и запуск таймера хода на 100 секунд
      try { if (window.__turnTimerId) clearInterval(window.__turnTimerId); } catch {}
      window.__turnTimerSeconds = 100;
      (function syncBtn(){ try {
        const btn = document.getElementById('end-turn-btn');
        if (btn) {
          const fill = btn.querySelector('.time-fill');
          const txt = btn.querySelector('.sec-text');
          if (txt) txt.textContent = `${window.__turnTimerSeconds}`;
          if (fill) fill.style.top = `0%`;
        }
      } catch {} })();
      window.__turnTimerId = setInterval(() => {
        if (typeof window.__turnTimerSeconds !== 'number') window.__turnTimerSeconds = 100;
        if (window.__turnTimerSeconds > 0) window.__turnTimerSeconds -= 1;
        try {
          const btn = document.getElementById('end-turn-btn');
          if (btn) {
            const fill = btn.querySelector('.time-fill');
